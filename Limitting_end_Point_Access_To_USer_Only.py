There are times we want to limit the capabilitie of our users and what they can access at our end points
In this end point we have implemented permissions that only limit accesss to logged in users'
Then we have put in place measures that give access to alogged in users access to only their  orderitmeds , but if the user is a n  admin user , they have access to all order items of all users




class OrderViewSet(ModelViewset):
      serilaizer_class = OrderSerialzer
      permission_classes =[IsAuthenticated]         ///In this end point we have implemented permissions that only limit accesss to logged in users'
      
      
      def get_queryset(self):
        if self.request.user.is_staff:             ///ut if the user is a n  admin user , they have access to all order items of all users, but if they are not an admin user, we only return their order ite
            return Order.objects.all()
        customer_id = Customer.objects.only('id').get(user_id=self.request.user.id)   ///Then we have put in place measures that give access to alogged in users access to only their  orderitmeds 
        return  Order.objects.filter(customer_id=customer_id)                                                                               // SO here we get the customer id by using the user id that is always sent with the reuest,The customer model is linked to the user model and we use the user id to get the customer id
                                                                                       // We then limit our results to the customer id
































































































































...
